use chrono::Local;
use std::{error::Error, fs::File, io::Write, path::PathBuf};

use crate::domain::club::Club;

pub fn dump(clubs: Vec<Club>, path: PathBuf, parent: uuid::Uuid) -> Result<(), Box<dyn Error>> {
    let mut file = File::create(path)?;

    writeln!(file, "-- AUTOGENERATED MOCK DATA, DO NOT MODIFY")?;
    writeln!(
        file,
        "-- GENERATED AT {}",
        Local::now().format("%Y-%m-%d %H:%M:%S")
    )?;

    writeln!(file, "BEGIN;\n")?;

    for club in clubs {
        writeln!(
            file,
            r#"INSERT INTO "clubs" ("name", "preview", "description", "num_members", "is_recruiting", "recruitment_cycle", "recruitment_type", "parent", ) VALUES ('{}', '{}', '{}', {}, {}, '{}', '{}', {});"#,
            club.name.replace('\'', "''"),
            club.preview.replace('\'', "''"),
            club.description.replace('\'', "''"),
            club.num_members,
            club.is_recruiting,
            club.recruitment_cycle,
            club.recruitment_type,
            parent,
        )?;
    }

    writeln!(file, "\nCOMMIT;")?;

    Ok(())
}
