name: Go

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "backend/**"
      - "scripts/init_db.sh"
      - ".github/workflows/go.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - name: Enforce formatting
        run: gofmt -l ./backend/ | grep ".go$" | xargs -r echo "Files not formatted:"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - name: Enforce linting
        run: |
          cd backend && lint_output=$(go vet ./...)
          if [[ -n "$lint_output" ]]; then
            echo "$lint_output"
            echo "::error::Linting issues found"
            exit 1
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: sac
        ports:
          - 5432:5432
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - name: Install Dependencies
        run: cd backend && go get ./...
      - name: Wait for PostgreSQL to become ready
        run: until pg_isready -h 127.0.0.1 -p 5432 -U postgres; do sleep 1; done
      - name: Increase max_connections in PostgreSQL
        run: |
          CONTAINER_ID=$(docker ps --filter "publish=5432" --format "{{.ID}}")
          docker exec $CONTAINER_ID bash -c "sed -i 's/^#* *max_connections *= *[0-9]*/max_connections = 256/' /var/lib/postgresql/data/postgresql.conf"
          docker exec $CONTAINER_ID cat /var/lib/postgresql/data/postgresql.conf | grep max_connections
          docker exec --user postgres $CONTAINER_ID bash -c "pg_ctl reload"

      - name: Verify max_connections Setting
        run: |
          # Connect to the PostgreSQL service and query the max_connections setting
          MAX_CONNECTIONS=$(psql -h localhost -p 5432 -U postgres -c "SHOW max_connections;" -tA)

          # Output the result
          echo "max_connections is set to: $MAX_CONNECTIONS"
        env:
          PGPASSWORD: password
      - name: Migrate DB
        run: cd backend/src && go run main.go --only-migrate
      - name: Run Tests with Coverage
        run: cd backend && go test -failfast -benchmem -race -coverprofile=coverage.txt ./...
      - name: Print Coverage
        run: cd backend && go tool cover -func=coverage.txt
